/*
## Summary
Create summary tables for only the Australian HEPs

## Description

## Contacts
julian.tonti-filippini@curtin.edu.au

## License
Apache 2.0

## Requires
table raw_papers
table core_papers
table core_journals
table core_fors
table research_outputs_*
table benchmarks_summary_*

## Creates
table heps_papers
table heps_summary_by_field_year
table heps_paper_classes
table heps_class_tallies_by_field_year
*/
const compile = ({
  project = "",
  dataset = "",
  digits = 4,
  replace = false,
  version = "",
}) => `
-- generated by: ${require("path").basename(__filename)}
BEGIN

  -- Updated HEPS table
  CREATE OR REPLACE TABLE \`${project}.${dataset}.heps${version}\` (ror STRING, code STRING, name STRING);
  INSERT INTO \`${project}.${dataset}.heps${version}\` (ror,code,name) VALUES
    ('https://ror.org/04cxm4j25', 'ACU', 'Australian Catholic University'                      ),
    ('https://ror.org/019wvm592', 'ANU', 'The Australian National University'                  ),
    ('https://ror.org/03n0gvg35', 'BAT', 'Batchelor Institute of Indigenous Tertiary Education'),
    ('https://ror.org/006jxzx88', 'BON', 'Bond University'                                     ),
    ('https://ror.org/023q4bk22', 'CQU', 'Central Queensland University'                       ),
    ('https://ror.org/048zcaj52', 'CDU', 'Charles Darwin University'                           ),
    ('https://ror.org/00wfvh315', 'CSU', 'Charles Sturt University'                            ),
    ('https://ror.org/02n415q13', 'CUT', 'Curtin University of Technology'                     ),
    ('https://ror.org/02czsnj07', 'DKN', 'Deakin University'                                   ),
    ('https://ror.org/05jhnwe22', 'ECU', 'Edith Cowan University'                              ),
    ('https://ror.org/05qbzwv83', 'FED', 'Federation University'                               ),
    ('https://ror.org/01kpzv902', 'FLN', 'Flinders University'                                 ),
    ('https://ror.org/02sc3r913', 'GRF', 'Griffith University'                                 ),
    ('https://ror.org/04gsp2c11', 'JCU', 'James Cook University'                               ),
    ('https://ror.org/01rxfrp27', 'LTU', 'La Trobe University'                                 ),
    ('https://ror.org/01sf06y89', 'MQU', 'Macquarie University'                                ),
    ('https://ror.org/02bfwt286', 'MON', 'Monash University'                                   ),
    ('https://ror.org/00r4sry34', 'MUR', 'Murdoch University'                                  ),
    ('https://ror.org/03pnv4752', 'QUT', 'Queensland University of Technology'                 ),
    ('https://ror.org/04ttjf776', 'RMT', 'Royal Melbourne Institute of Technology'             ),
    ('https://ror.org/001xkv632', 'SCU', 'Southern Cross University'                           ),
    ('https://ror.org/031rekg67', 'SWN', 'Swinburne University of Technology'                  ),
    ('https://ror.org/0351xae06', 'TOR', 'Torrens University Australia'                        ),
    ('https://ror.org/03r8z3t63', 'NSW', 'University of New South Wales'                       ),
    ('https://ror.org/00892tw58', 'ADE', 'University of Adelaide'                              ),
    ('https://ror.org/04s1nv328', 'CAN', 'University of Canberra'                              ),
    ('https://ror.org/02xn8bh65', 'DIV', 'University of Divinity'                              ),
    ('https://ror.org/01ej9dk98', 'MEL', 'University of Melbourne'                             ),
    ('https://ror.org/04r659a56', 'UNE', 'University of New England'                           ),
    ('https://ror.org/00eae9z71', 'NEW', 'University of Newcastle'                             ),
    ('https://ror.org/02stey378', 'NDA', 'University of Notre Dame Australia'                  ),
    ('https://ror.org/00rqy9422', 'QLD', 'University of Queensland'                            ),
    ('https://ror.org/01p93h210', 'USA', 'University of South Australia'                       ),
    ('https://ror.org/04sjbnx57', 'USQ', 'University of Southern Queensland'                   ),
    ('https://ror.org/0384j8v12', 'SYD', 'University of Sydney'                                ),
    ('https://ror.org/01nfmeh72', 'TAS', 'University of Tasmania'                              ),
    ('https://ror.org/03f0f6041', 'UTS', 'University of Technology, Sydney'                    ),
    ('https://ror.org/047272k79', 'UWA', 'University of Western Australia'                     ),
    ('https://ror.org/00jtmb277', 'WOL', 'University of Wollongong'                            ),
    ('https://ror.org/016gb9e15', 'USC', 'University of the Sunshine Coast'                    ),
    ('https://ror.org/04j757h98', 'VIC', 'Victoria University'                                 ),
    ('https://ror.org/03t52dk35', 'WSU', 'Western Sydney University'                           )
  ;

  --
  -- Generate a list of all journal articles that are affiliated with an Australian HEP
  -- NOTE: keyed by (ror,doi), not by doi
  --
  ${replace ? "CREATE OR REPLACE TABLE" : "CREATE TABLE IF NOT EXISTS"} \`${project}.${dataset}.heps_papers${version}\` AS (
    SELECT
      A.inst            AS institution,
      A.paper           AS doi,
      A.journal         AS era_id,
      A.year            AS year,
      A.cits            AS citations,
      ARRAY_AGG(STRUCT(
        A.field AS code,
        A.frac
      )) AS field
    -- limited to whatever restrictions built the core table (eg ERA date range)
    FROM \`${project}.${dataset}.core_assignments${version}\` AS A
    INNER JOIN \`${project}.${dataset}.core_heps${version}\` AS B ON A.inst = B.ror
    WHERE is_hep = TRUE
    GROUP BY institution, doi, era_id, year, citations
    ORDER BY institution, year DESC
  );
  ALTER TABLE \`${project}.${dataset}.heps_papers${version}\` SET OPTIONS(description='inst outputs that meet the basic criteria for ERA analysis');
  ALTER TABLE \`${project}.${dataset}.heps_papers${version}\`
  ALTER COLUMN institution SET OPTIONS (description="ROR identifier for Australian HEP"),
  ALTER COLUMN doi         SET OPTIONS (description="Digitial Object Identifier of the paper"),
  ALTER COLUMN era_id      SET OPTIONS (description="ERA Journal List ID of the encompassing journal"),
  ALTER COLUMN year        SET OPTIONS (description="Year of publication"),
  ALTER COLUMN citations   SET OPTIONS (description="Current number of citations"),
  ALTER COLUMN field       SET OPTIONS (description="ANZSIC field of research codes inherited from the journal");

  --
  -- Summary of statistics for the HEPS, keyed by (inst,field,year)
  --
  ${replace ? "CREATE OR REPLACE TABLE" : "CREATE TABLE IF NOT EXISTS"} \`${project}.${dataset}.heps_summary_by_field_year_${digits}_${version}\` AS (
    WITH
    HEPS  AS (SELECT ror,code FROM \`${project}.${dataset}.heps${version}\`),
    LOCAL AS (SELECT * FROM \`${project}.${dataset}.research_outputs_local_${digits}_institution_field_year${version}\` AS A INNER JOIN HEPS ON A.institution = HEPS.ror),
    WORLD AS (SELECT * FROM \`${project}.${dataset}.research_outputs_world_${digits}_institution_field_year${version}\` AS A INNER JOIN HEPS ON A.institution = HEPS.ror)
    SELECT
      LOCAL.institution    AS institution,
      HEPS.code            AS inst_code,
      LOCAL.field          AS field,
      LOCAL.year           AS year,

      LOCAL.sum_papers     AS papers,
      LOCAL.sum_citations  AS citations,
      LOCAL.sum_portions   AS portions,
      LOCAL.avg_citations  AS cpp,

      LOCAL.rank_papers    AS papers_rank_local,
      WORLD.rank_papers    AS papers_rank_world,
      WORLD.cent_papers    AS papers_cent_world,

      LOCAL.rank_citations AS citations_rank_local,
      WORLD.rank_citations AS citations_rank_world,
      WORLD.cent_citations AS citations_cent_world,

      LOCAL.rank_portions  AS portions_rank_local,
      WORLD.rank_portions  AS portions_rank_world,
      WORLD.cent_portions  AS portions_cent_world,

      LOCAL.rank_cpp       AS cpp_rank_local,
      WORLD.rank_cpp       AS cpp_rank_world,
      WORLD.cent_cpp       AS cpp_cent_world,
    FROM LOCAL
    LEFT JOIN WORLD ON LOCAL.institution = WORLD.institution AND LOCAL.field = WORLD.field AND LOCAL.year = WORLD.year
    LEFT JOIN HEPS ON LOCAL.institution = HEPS.ror
    WHERE LENGTH(LOCAL.field) = ${digits}
    ORDER BY institution,field,year
  );
  ALTER TABLE \`${project}.${dataset}.heps_summary_by_field_year_${digits}_${version}\` SET OPTIONS(description='Total inst outputs by field of research and year');
  ALTER TABLE \`${project}.${dataset}.heps_summary_by_field_year_${digits}_${version}\`
  ALTER COLUMN institution          SET OPTIONS (description="ROR identifier for Australian HEP"),
  ALTER COLUMN field                SET OPTIONS (description="ANZSIC field of research code"),
  ALTER COLUMN year                 SET OPTIONS (description="analysis year (publication year of articles)"),
  ALTER COLUMN papers               SET OPTIONS (description="total number of papers published by inst staff"),
  ALTER COLUMN citations            SET OPTIONS (description="total number of citations for all papers"),
  ALTER COLUMN portions             SET OPTIONS (description="sum of paper apportionments to this field of research"),
  ALTER COLUMN cpp                  SET OPTIONS (description="average citations per paper"),
  ALTER COLUMN papers_rank_local    SET OPTIONS (description="rank versus other Australian HEPs (1:best, 40:worst)"),
  ALTER COLUMN papers_rank_world    SET OPTIONS (description="rank versus all world instutions (1:best)"),
  ALTER COLUMN papers_cent_world    SET OPTIONS (description="world percentile, 1-100. 1 = top 1% in the world"),
  ALTER COLUMN citations_rank_local SET OPTIONS (description="rank versus other Australian HEPs (1:best, 40:worst)"),
  ALTER COLUMN citations_rank_world SET OPTIONS (description="rank versus all world instutions (1:best)"),
  ALTER COLUMN citations_cent_world SET OPTIONS (description="world percentile, 1-100. 1 = top 1% in the world"),
  ALTER COLUMN portions_rank_local  SET OPTIONS (description="rank versus other Australian HEPs (1:best, 40:worst)"),
  ALTER COLUMN portions_rank_world  SET OPTIONS (description="rank versus all world instutions (1:best)"),
  ALTER COLUMN portions_cent_world  SET OPTIONS (description="world percentile, 1-100. 1 = top 1% in the world"),
  ALTER COLUMN cpp_rank_local       SET OPTIONS (description="rank versus other Australian HEPs (1:best, 40:worst)"),
  ALTER COLUMN cpp_rank_world       SET OPTIONS (description="rank versus all world instutions (1:best)"),
  ALTER COLUMN cpp_cent_world       SET OPTIONS (description="world percentile, 1-100. 1 = top 1% in the world");

  -- Assigns RCI classes to inst outputs
  ${replace ? "CREATE OR REPLACE TABLE" : "CREATE TABLE IF NOT EXISTS"} \`${project}.${dataset}.heps_paper_classes_${digits}_${version}\` AS (
    SELECT DISTINCT
      A.institution,
      A.doi,
      A.year,
      citations,
      F.code,
      IF (B.cpp_local = 0, 0.0, ROUND(citations / B.cpp_local,4)) AS rci_local,
      IF (B.cpp_world = 0, 0.0, ROUND(citations / B.cpp_world,4)) AS rci_world,
      IF (B.cpp_hpi   = 0, 0.0, ROUND(citations / B.cpp_hpi  ,4)) AS rci_hpi,
      citations > B.cpp_hpi AS high_perf,
      CASE
        WHEN citations > B.ctile_01 THEN 1
        WHEN citations > B.ctile_05 THEN 5
        WHEN citations > B.ctile_10 THEN 10
        WHEN citations > B.ctile_25 THEN 25
        WHEN citations > B.ctile_50 THEN 50
        ELSE 100
      END AS cent_group,
      CASE
        WHEN citations > B.dynamic_c4 THEN 5
        WHEN citations > B.dynamic_c3 THEN 4
        WHEN citations > B.dynamic_c2 THEN 3
        WHEN citations > B.dynamic_c1 THEN 2
        WHEN citations > B.dynamic_c0 THEN 1
        ELSE 0
      END AS cat_dynamic,
      CASE
        WHEN citations > B.static_c5 THEN 6
        WHEN citations > B.static_c4 THEN 5
        WHEN citations > B.static_c3 THEN 4
        WHEN citations > B.static_c2 THEN 3
        WHEN citations > B.static_c1 THEN 2
        WHEN citations > B.static_c0 THEN 1
        ELSE 0
      END AS cat_static
    FROM \`${project}.${dataset}.heps_papers${version}\` AS A
    LEFT JOIN UNNEST(field) as F
    LEFT JOIN \`${project}.${dataset}.benchmarks_summary_${digits}_${version}\` AS B ON A.year = B.year AND F.code = B.field
    WHERE LENGTH(F.code) = ${digits}
    ORDER BY year, doi, code
  );
  ALTER TABLE \`${project}.${dataset}.heps_paper_classes_${digits}_${version}\` SET OPTIONS(description='inst papers with various ERA ratings methods');
  ALTER TABLE \`${project}.${dataset}.heps_paper_classes_${digits}_${version}\`
  ALTER COLUMN institution SET OPTIONS(description="ROR identifier for the institution"),
  ALTER COLUMN doi         SET OPTIONS(description="digital object identifier for the paper"),
  ALTER COLUMN year        SET OPTIONS(description="year of publication"),
  ALTER COLUMN citations   SET OPTIONS(description="number of citations"),
  ALTER COLUMN code        SET OPTIONS(description="ANZSIC field of research code"),
  ALTER COLUMN rci_local   SET OPTIONS(description="relative citation impact using the Australian benchmark"),
  ALTER COLUMN rci_world   SET OPTIONS(description="relative citation impact using the world benchmark"),
  ALTER COLUMN rci_hpi     SET OPTIONS(description="relative citation impact using the world high-performing institutions benchmark"),
  ALTER COLUMN high_perf   SET OPTIONS(description="true if the paper is above the high-performing benchmark"),
  ALTER COLUMN cent_group  SET OPTIONS(description="ERA percentile grouping. The groupings are top 1%, 1-5%, 5-10%, 10-25%, 25-50%, bottom 50%"),
  ALTER COLUMN cat_dynamic SET OPTIONS(description="ERA dynamic RCI category. 0:uncited, 5:best"),
  ALTER COLUMN cat_static  SET OPTIONS(description="ERA static RCI category. 0:uncited, 6:best");

  -- tally up RCI classes by (field,year)
  ${replace ? "CREATE OR REPLACE TABLE" : "CREATE TABLE IF NOT EXISTS"} \`${project}.${dataset}.heps_class_tallies_by_field_year_${digits}_${version}\` AS (
    SELECT
      institution,
      year,
      code AS field,
      COUNT(1) AS publications,
      SUM(citations) AS citations,
      ROUND(AVG(rci_local),4) AS avg_rci_local,
      ROUND(AVG(rci_world),4) AS avg_rci_world,
      ROUND(AVG(rci_hpi)  ,4) AS avg_rci_hpi,
      COUNTIF(high_perf) AS high_perf,
      COUNTIF(cent_group =   1) AS c1,
      COUNTIF(cent_group =   5) AS c5,
      COUNTIF(cent_group =  10) AS c10,
      COUNTIF(cent_group =  25) AS c25,
      COUNTIF(cent_group =  50) AS c50,
      COUNTIF(cent_group = 100) AS c100,
      COUNTIF(cat_dynamic = 5) AS d5,
      COUNTIF(cat_dynamic = 4) AS d4,
      COUNTIF(cat_dynamic = 3) AS d3,
      COUNTIF(cat_dynamic = 2) AS d2,
      COUNTIF(cat_dynamic = 1) AS d1,
      COUNTIF(cat_dynamic = 0) AS d0,
      COUNTIF(cat_static = 6) AS s6,
      COUNTIF(cat_static = 5) AS s5,
      COUNTIF(cat_static = 4) AS s4,
      COUNTIF(cat_static = 3) AS s3,
      COUNTIF(cat_static = 2) AS s2,
      COUNTIF(cat_static = 1) AS s1,
      COUNTIF(cat_static = 0) AS s0
    FROM \`${project}.${dataset}.heps_paper_classes_${digits}_${version}\`
    GROUP BY institution,year,field
    ORDER BY institution,year,field
  );
  ALTER TABLE \`${project}.${dataset}.heps_class_tallies_by_field_year_${digits}_${version}\` SET OPTIONS(description='Tallies of inst papers in each citation class, by field of research and year');
  ALTER TABLE \`${project}.${dataset}.heps_class_tallies_by_field_year_${digits}_${version}\`
  ALTER COLUMN institution   SET OPTIONS(description='ROR identifier of the institution'),
  ALTER COLUMN year          SET OPTIONS(description='year of analysis (publication year of papers)'),
  ALTER COLUMN field         SET OPTIONS(description='ANZSIC field of research code'),
  ALTER COLUMN publications  SET OPTIONS(description='total number of publications'),
  ALTER COLUMN citations     SET OPTIONS(description='total number of citations'),
  ALTER COLUMN avg_rci_local SET OPTIONS(description='average RCI-local score'),
  ALTER COLUMN avg_rci_world SET OPTIONS(description='average RCI-world score'),
  ALTER COLUMN avg_rci_hpi   SET OPTIONS(description='average RCI-high-performing score'),
  ALTER COLUMN high_perf     SET OPTIONS(description='number of papers that are above the high performance threshold'),
  ALTER COLUMN c1            SET OPTIONS(description='number of papers in ERA percentile range < 1%'),
  ALTER COLUMN c5            SET OPTIONS(description='number of papers in ERA percentile range 1% to < 5%'),
  ALTER COLUMN c10           SET OPTIONS(description='number of papers in ERA percentile range 5% to < 10%'),
  ALTER COLUMN c25           SET OPTIONS(description='number of papers in ERA percentile range 10% to < 25%'),
  ALTER COLUMN c50           SET OPTIONS(description='number of papers in ERA percentile range 25% to < 50%'),
  ALTER COLUMN c100          SET OPTIONS(description='number of papers in ERA percentile range >= 50%'),
  ALTER COLUMN d5            SET OPTIONS(description='number of papers with dynamic RCI class 5 (best)'),
  ALTER COLUMN d4            SET OPTIONS(description='number of papers with dynamic RCI class 4'),
  ALTER COLUMN d3            SET OPTIONS(description='number of papers with dynamic RCI class 3'),
  ALTER COLUMN d2            SET OPTIONS(description='number of papers with dynamic RCI class 2'),
  ALTER COLUMN d1            SET OPTIONS(description='number of papers with dynamic RCI class 1'),
  ALTER COLUMN d0            SET OPTIONS(description='number of papers with dynamic RCI class 0 (uncited)'),
  ALTER COLUMN s6            SET OPTIONS(description='number of papers with static RCI class 6 (best)'),
  ALTER COLUMN s5            SET OPTIONS(description='number of papers with static RCI class 5'),
  ALTER COLUMN s4            SET OPTIONS(description='number of papers with static RCI class 4'),
  ALTER COLUMN s3            SET OPTIONS(description='number of papers with static RCI class 3'),
  ALTER COLUMN s2            SET OPTIONS(description='number of papers with static RCI class 2'),
  ALTER COLUMN s1            SET OPTIONS(description='number of papers with static RCI class 1'),
  ALTER COLUMN s0            SET OPTIONS(description='number of papers with static RCI class 0 (uncited)');

END;`;
const compile_all = (args = {}) => [
  compile({ ...args, digits: 4 }),
  compile({ ...args, digits: 2 }),
];
module.exports = { compile, compile_all };
if (require.main === module) require("../app").cli_compile(compile_all);
