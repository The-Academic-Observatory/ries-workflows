/* Create a json file of outputs to upload to the RIES app.

Current workflow is to run this in the BQ console, and save output as a JSONL file in the data folder of the ries-app local repo.

Then run the export_institution.js to generate the outputs.sql file that is uploaded to cloudflare.

*/
function compile({ for_table = "", foe_table = "" }) {
  return ` -- generated by: ${require("path").basename(__filename)}
WITH
results AS (
    SELECT * FROM ${for_table}
    UNION ALL
    SELECT * FROM ${foe_table}
)
  
SELECT
    doi,
    inst,
    assignment,
    classification,
    -- LIMIT 100 here because some papers have 1000s of authors that break the .sql loading
    ARRAY(SELECT institutions FROM UNNEST(institutions) as institutions LIMIT 100) as institutions,
    ARRAY(SELECT authors FROM UNNEST(authors) as authors LIMIT 100) as authors,
    ARRAY(SELECT inst_authors FROM UNNEST(inst_authors) as inst_authors LIMIT 100) as inst_authors,
    ARRAY(SELECT apportionment FROM UNNEST(apportionment) as apportionment LIMIT 100) as apportionment,
    * EXCEPT (
        doi,
        inst,
        assignment,
        classification,
        institutions,
        authors,
        inst_authors,
        apportionment
      )
FROM
  results`;
}

module.exports = { compile };
if (require.main === module) {
  let conf = require("../app").conf;
  console.log(compile(conf));
}
